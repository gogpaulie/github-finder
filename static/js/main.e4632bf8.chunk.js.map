{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navigation.js","context/github/githubContext.js","context/alert/alertContext.js","components/users/Search.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/pages/Home.js","components/repos/RepoItem.js","context/github/GithubState.js","components/repos/Repos.js","components/users/User.js","components/pages/NotFound.js","components/layout/Alert.js","components/pages/About.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navigation","icon","title","className","to","defaultProps","githubContext","createContext","alertContext","Search","useContext","GithubContext","AlertContext","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","id","type","name","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","user","login","avatar_url","html_url","src","alt","Spinner","spinner","style","width","margin","display","Users","loading","map","key","Home","RepoItem","repo","href","propType","PropTypes","object","isRequired","githubClientId","githubClientSecret","Repos","repos","User","match","getUser","getUserRepos","useEffect","params","company","location","bio","blog","followers","following","public_repos","public_gists","hireable","NotFound","Alert","alert","message","About","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","githubReducer","dispatch","a","setLoading","axios","get","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4632bf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.b410fd82.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ icon, title }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <h1>\r\n        <i className={icon}></i>\r\n        {title}\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/about'>About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavigation.defaultProps = {\r\n  title: ' Github Finder',\r\n  icon: 'fab fa-github',\r\n};\r\n\r\nNavigation.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alertContext.setAlert('Please enter text in searchfield', 'light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n  const onChange = (e) => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          id='search-input'\r\n          type='text'\r\n          name='text'\r\n          placeholder='Search Users...'\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value='Search'\r\n          className='btn btn-dark btn-block'\r\n          id='search-btn'\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className='btn btn-light btn-block'\r\n          onClick={githubContext.clearUsers}\r\n          id='clear-btn'\r\n        >\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n  return (\r\n    <div className='card text-center user-card br-10'>\r\n      <img src={avatar_url} alt='' className='round-img' />\r\n      <h2>{login}</h2>\r\n      <div>\r\n        <Link\r\n          to={`/user/${login}`}\r\n          className='card-btn btn btn-dark btn-lg my-3'\r\n        >\r\n          More\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        alt='Loading...'\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext } from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { loading, users } = githubContext;\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div className='users-container'>\r\n        {users.map((user) => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Users;\r\n","import React, { Fragment } from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n      <Users />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RepoItem = ({ repo }) => {\r\n  return (\r\n    <div className='card'>\r\n      <h3>\r\n        <a href={repo.html_url}>{repo.name}</a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nRepoItem.propType = {\r\n  repo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RepoItem;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport githubReducer from './githubReducer';\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n} from '../types';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = (props) => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n  };\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  // Search Users\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items,\r\n    });\r\n  };\r\n  // Get User\r\n  const getUser = async (username) => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  };\r\n  // Get Repos\r\n  const getUserRepos = async (username) => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n  // Clear users\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n  // Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './RepoItem';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\r\n};\r\n\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired,\r\n};\r\nexport default Repos;\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport { Link } from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    login,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable,\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-light'>\r\n        Back To Search\r\n      </Link>\r\n      Hireable:{' '}\r\n      {hireable ? (\r\n        <i className='fas fa-check text-success' />\r\n      ) : (\r\n        <i className='fas fa-times-circle text-danger' />\r\n      )}\r\n      <div className='card grid-2'>\r\n        <div className='all-center'>\r\n          <img\r\n            src={avatar_url}\r\n            className='round-img'\r\n            alt=''\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>\r\n            <strong>Location: </strong>\r\n            {location}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <a href={html_url} className='btn btn-dark my-1 br-5'>\r\n            Visit Github Profile\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username: </strong> {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company: </strong> {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website: </strong> {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='card text-center'>\r\n        <div className='badge badge-primary'>Follower: {followers}</div>\r\n        <div className='badge badge-success'>Following: {following}</div>\r\n        <div className='badge badge-light'>Repos: {public_repos}</div>\r\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>Not Found</h1>\r\n      <p className='lead'>The page you requested does not exist...</p>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { alert } = alertContext;\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fas fa-info-circle'></i> {alert.message}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>About This App</h1>\r\n      <p>App to search Github users by fetching info from the Github Api</p>\r\n      <p>Version: 1.0.0</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = null;\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  // Set Alert\r\n  const setAlert = (message, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { message, type },\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navigation from './components/layout/Navigation';\nimport Home from './components/pages/Home';\nimport User from './components/users/User';\nimport NotFound from './components/pages/NotFound';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className='App'>\n            <Navigation />\n            <div className='container'>\n              <Alert />\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/user/:login' component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}